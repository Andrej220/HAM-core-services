apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: kafka-headless
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: apache/kafka:4.0.0
        env:
        - name: KAFKA_BROKER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name 
        - name: KAFKA_PROCESS_ROLES
          value: "broker,controller"
        - name: KAFKA_CONTROLLER_QUORUM_VOTERS
          value: |
            0@kafka-0.kafka-headless.kafka.svc.cluster.local:9093,
            1@kafka-1.kafka-headless.kafka.svc.cluster.local:9093,
            2@kafka-2.kafka-headless.kafka.svc.cluster.local:9093
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093"
        - name: KAFKA_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka-$(hostname).kafka-headless.kafka.svc.cluster.local:9092"
        - name: KAFKA_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name 
        ports:
        - containerPort: 9092
          name: broker
        - containerPort: 9093
          name: controller
        volumeMounts:
        - name: volume-0
          mountPath: /var/lib/kafka/logs0
        - name: volume-1
          mountPath: /var/lib/kafka/logs1
  volumeClaimTemplates:
  - metadata:
      name: volume-0
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: longhorn-r0
      resources:
        requests:
          storage: 10Gi
  - metadata:
      name: volume-1
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: longhorn-r10
      resources:
        requests:
          storage: 10Gi
